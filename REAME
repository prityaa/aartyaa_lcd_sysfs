#
compilation : make

#
to set lcd color echo r y b > lcd_ryb in /sys/bus/i2c/devices/1-0062/

#
in board file
/* for core platform data */
static struct platform_device aartyaa_lcd_device = {
        .name = "aartyaa_lcd",
        .id = 0,
        .num_resources = 0,
        // .dev.platform_data = &aartyaa_lcd_pdata,
};

/* platform data passed in client to driver*/
static struct i2c_board_info __initdata aartyaa_lcd_i2c_devices[] = {
        {
                .type = "aartyaa_lcd",
                .addr = 0x62,
                .platform_data = &aartyaa_lcd_pdata,
        },
};

#
and in driver

/** sysfs to change text  display */
static ssize_t aartyaa_lcd_show_text(struct device *dev,
                        struct device_attribute *attr,
                        char *buf)
{
        struct i2c_client *client = to_i2c_client(dev);
        struct aartyaa_lcd_platform_data *aartyaa_pdata = client->dev.platform_data;

        pr_debug("aartyaa_lcd_show_text : id = %x, name = %s\n",
                 client->addr, client->name);

        pr_debug("aartyaa_lcd_show_text : aartyaa_pdata display addr = %x\n",
                        aartyaa_pdata->display_text_addr);

        return sprintf(buf, "%02x%02x%02x", r,y,b);
}

#
put header file in include/linux

----------------------------------------------------------------

READ and write operations
------------------------------------------------------------
i2c_smbus_xfer
	__i2c_smbus_xfer - drivers/i2c/i2c-core-smbus.c
		adapter->algo->smbus_xfer - drivers/i2c/i2c-core-smbus.c
		.smbus_xfer     = stub_xfer - drivers/i2c/i2c-stub.c


	i2c_smbus_xfer_emulated - drivers/i2c/i2c-core-smbus.c
		__i2c_transfer	- drivers/i2c/i2c-core-base.c
			adap->algo->master_xfer -

		.master_xfer    = bcm2835_i2c_xfer,

		bcm2835_i2c_xfer - drivers/i2c/busses/i2c-bcm2835.c
			bcm2835_i2c_set_divider
			bcm2835_i2c_start_transfer

			wait_for_completion_timeout

				this waits till we get i/r
				and 'complete' is called by
				bcm2835_i2c_isr 				 this ISR

			bcm2835_i2c_writel



			bcm2835_i2c_isr



reference :
basic https://embedjournal.com/two-wire-interface-i2c-protocol-in-a-nut-shell/
userland : https://elinux.org/Interfacing_with_I2C_Devices
http://opensourceforu.com/2015/01/writing-i2c-clients-in-linux/
https://learnlinuxconcepts.blogspot.com/2014/10/i2c-protocol.html

linux client driver : http://renjucnair.blogspot.com/2012/01/writing-i2c-client-driver.html
		      https://www.kernel.org/doc/Documentation/i2c/writing-clients

https://opensourceforu.com/2015/01/writing-i2c-clients-in-linux/

